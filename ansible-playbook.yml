---
- name: Deploy Techlab
  hosts: localhost
  become: yes
  tasks:
    - name: Create Namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: techlab

    - name: Create PersistentVolumeClaims
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: grafana-data
            namespace: techlab
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi

    - name: Create Deployment for Backend
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: backend
            namespace: techlab
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: backend
            template:
              metadata:
                labels:
                  app: backend
              spec:
                containers:
                  - name: backend
                    image: backend:latest
                    ports:
                      - containerPort: 8000

    - name: Create Service for Backend
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: backend
            namespace: techlab
          spec:
            selector:
              app: backend
            ports:
              - protocol: TCP
                port: 8000
                targetPort: 8000
            type: LoadBalancer

    - name: Create Deployment for Grafana
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: grafana
            namespace: techlab
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: grafana
            template:
              metadata:
                labels:
                  app: grafana
              spec:
                containers:
                  - name: grafana
                    image: daafinho/fullstack_conteinerized-grafana:latest
                    ports:
                      - containerPort: 3000
                    volumeMounts:
                      - mountPath: /var/lib/grafana
                        name: grafana-data
                volumes:
                  - name: grafana-data
                    persistentVolumeClaim:
                      claimName: grafana-data

    - name: Create Service for Grafana
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: grafana
            namespace: techlab
          spec:
            selector:
              app: grafana
            ports:
              - protocol: TCP
                port: 3000
                targetPort: 3000
            type: LoadBalancer

    - name: Create Deployment for PostgreSQL
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: pg-db
            namespace: techlab
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: pg-db
            template:
              metadata:
                labels:
                  app: pg-db
              spec:
                containers:
                  - name: pg-db
                    image: postgres:latest
                    ports:
                      - containerPort: 5432
                    volumeMounts:
                      - mountPath: /var/lib/postgresql/data
                        name: postgres-data
                volumes:
                  - name: postgres-data
                    persistentVolumeClaim:
                      claimName: postgres-data

    - name: Create Service for PostgreSQL
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: pg-db
            namespace: techlab
          spec:
            selector:
              app: pg-db
            ports:
              - protocol: TCP
                port: 5432
                targetPort: 5432
            type: LoadBalancer

    - name: Create Deployment for InfluxDB
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: influxdb
            namespace: techlab
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: influxdb
            template:
              metadata:
                labels:
                  app: influxdb
              spec:
                containers:
                  - name: influxdb
                    image: influxdb:2.6-alpine
                    ports:
                      - containerPort: 8086
                    volumeMounts:
                      - mountPath: /var/lib/influxdb2
                        name: influxdbv2
                      - mountPath: /var/data/influxdb2
                        name: influxdbv2
                    envFrom:
                      - configMapRef:
                          name: influxdb-env
                volumes:
                  - name: influxdbv2
                    persistentVolumeClaim:
                      claimName: influxdbv2

    - name: Create Service for InfluxDB
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: influxdb
            namespace: techlab
          spec:
            selector:
              app: influxdb
            ports:
              - protocol: TCP
                port: 8086
                targetPort: 8086
            type: LoadBalancer

    - name: Create ConfigMap for InfluxDB
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: influxdb-env
            namespace: techlab
          data:
            INFLUXDB_DB: mydb
            INFLUXDB_ADMIN_USER: admin
            INFLUXDB_ADMIN_PASSWORD: adminpassword

    - name: Create Deployment for Telegraf
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: telegraf
            namespace: techlab
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: telegraf
            template:
              metadata:
                labels:
                  app: telegraf
              spec:
                containers:
                  - name: telegraf
                    image: telegraf:1.25-alpine
                    volumeMounts:
                      - mountPath: /etc/telegraf/telegraf.conf
                        name: telegraf-config
                        subPath: telegraf.conf
                    envFrom:
                      - configMapRef:
                          name: influxdb-env
                volumes:
                  - name: telegraf-config
                    configMap:
                      name: telegraf-config

    - name: Create ConfigMap for Telegraf
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: telegraf-config
            namespace: techlab
          data:
            telegraf.conf: |
              # Telegraf configuration file

    - name: Create Deployment for Frontend API
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: frontend_api
            namespace: techlab
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: frontend_api
            template:
              metadata:
                labels:
                  app: frontend_api
              spec:
                containers:
                  - name: frontend_api
                    image: frontend_api
                    ports:
                      - containerPort: 3000

    - name: Create Service for Frontend API
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: frontend_api
            namespace: techlab
          spec:
            selector:
              app: frontend_api
            ports:
              - protocol: TCP
                port: 3000
                targetPort: 3000
            type: LoadBalancer