apiVersion: v1
kind: Namespace
metadata:
  name: techlab

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: techlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: techlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdbv2
  namespace: techlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: techlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest
          ports:
            - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: techlab
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: techlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: techlab
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-db
  namespace: techlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg-db
  template:
    metadata:
      labels:
        app: pg-db
    spec:
      containers:
        - name: pg-db
          image: postgres:latest
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data

---
apiVersion: v1
kind: Service
metadata:
  name: pg-db
  namespace: techlab
spec:
  selector:
    app: pg-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: techlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
        - name: influxdb
          image: influxdb:2.6-alpine
          ports:
            - containerPort: 8086
          volumeMounts:
            - mountPath: /var/lib/influxdb2
              name: influxdbv2
            - mountPath: /var/data/influxdb2
              name: influxdbv2
          envFrom:
            - secretRef:
                name: influxdb-secrets
      volumes:
        - name: influxdbv2
          persistentVolumeClaim:
            claimName: influxdbv2

---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: techlab
spec:
  selector:
    app: influxdb
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
  type: LoadBalancer

---
apiVersion: v1
kind: Secret
metadata:
  name: influxdb-secrets
  namespace: techlab
type: Opaque
data:
  INFLUXDB_ADMIN_PASSWORD: YWRtaW5wYXNzd29yZA==  # Base64 encoded password: "adminpassword"
  INFLUXDB_ADMIN_USER: YWRtaW4=  # Base64 encoded user: "admin"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: techlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
        - name: telegraf
          image: telegraf:1.25-alpine
          volumeMounts:
            - mountPath: /etc/telegraf/telegraf.conf
              name: telegraf-config
              subPath: telegraf.conf
          envFrom:
            - secretRef:
                name: influxdb-secrets
      volumes:
        - name: telegraf-config
          configMap:
            name: telegraf-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: techlab
data:
  telegraf.conf: |
    # Telegraf configuration file

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: techlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: frontend:latest
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: techlab
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer
